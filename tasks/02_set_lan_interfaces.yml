---
- name: Ensure br0 is set to auto
  ansible.builtin.lineinfile:
    path: /etc/network/interfaces
    line: 'auto lo br0'
    state: present

- name: Ensure loopback is set present
  ansible.builtin.lineinfile:
    path: /etc/network/interfaces
    line: 'iface lo inet loopback'
    state: present

- name: Ensure kernal is allows bridging
  ansible.builtin.lineinfile:
    path: /etc/sysctl.conf
    regexp: '^#net.ipv4.ip_forward=1'
    line: 'net.ipv4.ip_forward=1'
    state: present

- name: Set interface vars
  ansible.builtin.set_fact:
    br0_int:
      - '# bridge interface(internal)'
      - iface br0 inet static
      - bridge_ports wlan1 eth1
      - address 172.16.35.1
      - netmask 255.255.255.0
      - network 172.16.35.0
      - broadcast 172.16.35.255
      - gateway 172.16.35.1
      - post-up iptables-restore < /etc/iptables.ipv4.nat
      - ''

    eth1_int:
      - '# eth1(USB NIC, Internal Network)'
      - allow-hotplug eth1
      - iface eth1 inet manual
      - ''

    wlan1_int:
      - '# wireless wlan1 (internal)'
      - allow-hotplug wlan1
      - iface wlan1 inet manual
      - wpa-conf /etc/wpa_supplicant/wpa_supplicant-wlan1.conf
      - ''

- name: Ensure br0 interface is present
  ansible.builtin.lineinfile:
    path: /etc/network/interfaces
    line: "{{ item }}"
    insertafter: "{{ after_var }}"
    state: present
  loop: "{{ br0_int }}"
  vars:
    after_var: "{{ 'EOF' if index == 0 else br0_int[index - 1] }}"
  loop_control:
    index_var: index

# - name: Ensure eth1 interface is present
#   ansible.builtin.lineinfile:
#     path: /etc/network/interfaces
#     line: "{{ item }}"
#     insertafter: "{{ after_var }}"
#     state: present
#   loop: "{{ eth1_int }}"
#   vars:
#     after_var: "{{ 'EOF' if index == 0 else eth1_int[index - 1] }}"
#   loop_control:
#     index_var: index

- name: Ensure wlan1 interface is present
  ansible.builtin.lineinfile:
    path: /etc/network/interfaces
    line: "{{ item }}"
    insertafter: "{{ after_var }}"
    state: present
  loop: "{{ wlan1_int }}"
  vars:
    after_var: "{{ 'EOF' if index == 0 else wlan1_int[index - 1] }}"
  loop_control:
    index_var: index
